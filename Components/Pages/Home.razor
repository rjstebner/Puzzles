@page "/"
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<div class="main">
  <input type="text" @bind="searchTerm" placeholder="Search for puzzles" />
  <button @onclick="Search">Search</button>

  <ul class="puzzle-cards">
    @if (filteredPuzzles != null)
    {
      @foreach (var puzzle in filteredPuzzles)
      {
        <li>
          <img width="200px" src="@puzzle.ImageUrl" alt="Puzzle Image" />
          <div class="puzzle-info">
            <span class="title">@puzzle.Name</span>
            @puzzle.Description
            <span class="price">@puzzle.GetFormattedBasePrice()</span>
          </div>
          <button class="btn btn-primary" @onclick="() => CartState.AddToCart(puzzle)">Add to cart</button>
        </li>
      }
    }
  </ul>
</div>


@code {
  @inject CartState CartState;

  @using Puzzles.Services;
  @using Puzzles.Data;

  List<PuzzleList> puzzles = new();
  List<PuzzleList> filteredPuzzles = new();
  string searchTerm = "";

  Cart cart => CartState.Cart;

  protected override void OnInitialized()
  {
    puzzles.AddRange(PuzzleData.GetPuzzles());
    filteredPuzzles = puzzles;
  }

  void Search()
  {
    if (string.IsNullOrWhiteSpace(searchTerm))
    {
      filteredPuzzles = puzzles;
    }
    else
    {
      filteredPuzzles = puzzles.Where(p => p.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)).ToList();
    }
  }
}